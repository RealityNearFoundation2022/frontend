{"version":3,"file":"index.es.js","sources":["../src/constants/client.ts","../src/constants/history.ts","../src/constants/proposal.ts","../src/constants/session.ts","../src/constants/engine.ts","../src/controllers/engine.ts","../src/controllers/proposal.ts","../src/controllers/session.ts","../src/client.ts","../src/index.ts"],"sourcesContent":["import { SignClientTypes } from \"@walletconnect/types\";\n\nexport const SIGN_CLIENT_PROTOCOL = \"wc\";\nexport const SIGN_CLIENT_VERSION = 2;\nexport const SIGN_CLIENT_CONTEXT = \"client\";\n\nexport const SIGN_CLIENT_STORAGE_PREFIX = `${SIGN_CLIENT_PROTOCOL}@${SIGN_CLIENT_VERSION}:${SIGN_CLIENT_CONTEXT}:`;\n\nexport const SIGN_CLIENT_DEFAULT = {\n  name: SIGN_CLIENT_CONTEXT,\n  logger: \"error\",\n  controller: false,\n  relayUrl: \"wss://relay.walletconnect.com\",\n};\n\nexport const SIGN_CLIENT_EVENTS: Record<SignClientTypes.Event, SignClientTypes.Event> = {\n  session_proposal: \"session_proposal\",\n  session_update: \"session_update\",\n  session_extend: \"session_extend\",\n  session_ping: \"session_ping\",\n  session_delete: \"session_delete\",\n  session_expire: \"session_expire\",\n  session_request: \"session_request\",\n  session_event: \"session_event\",\n  proposal_expire: \"proposal_expire\",\n};\n\nexport const SIGN_CLIENT_STORAGE_OPTIONS = {\n  database: \":memory:\",\n};\n","export const HISTORY_EVENTS = {\n  created: \"history_created\",\n  updated: \"history_updated\",\n  deleted: \"history_deleted\",\n  sync: \"history_sync\",\n};\n\nexport const HISTORY_CONTEXT = \"history\";\n\nexport const HISTORY_STORAGE_VERSION = \"0.3\";\n","import { THIRTY_DAYS } from \"@walletconnect/time\";\n\nexport const PROPOSAL_CONTEXT = \"proposal\";\n\nexport const PROPOSAL_EXPIRY = THIRTY_DAYS;\n","import { SEVEN_DAYS } from \"@walletconnect/time\";\n\nexport const SESSION_CONTEXT = \"session\";\n\nexport const SESSION_EXPIRY = SEVEN_DAYS;\n","import { FIVE_MINUTES, ONE_DAY, THIRTY_SECONDS } from \"@walletconnect/time\";\nimport { EngineTypes } from \"@walletconnect/types\";\n\nexport const ENGINE_CONTEXT = \"engine\";\n\nexport const ENGINE_RPC_OPTS: EngineTypes.RpcOptsMap = {\n  wc_sessionPropose: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1100,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1101,\n    },\n  },\n  wc_sessionSettle: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1102,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1103,\n    },\n  },\n  wc_sessionUpdate: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1104,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1105,\n    },\n  },\n  wc_sessionExtend: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1106,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1107,\n    },\n  },\n  wc_sessionRequest: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1108,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1109,\n    },\n  },\n  wc_sessionEvent: {\n    req: {\n      ttl: FIVE_MINUTES,\n      prompt: true,\n      tag: 1110,\n    },\n    res: {\n      ttl: FIVE_MINUTES,\n      prompt: false,\n      tag: 1111,\n    },\n  },\n\n  wc_sessionDelete: {\n    req: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1112,\n    },\n    res: {\n      ttl: ONE_DAY,\n      prompt: false,\n      tag: 1113,\n    },\n  },\n  wc_sessionPing: {\n    req: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1114,\n    },\n    res: {\n      ttl: THIRTY_SECONDS,\n      prompt: false,\n      tag: 1115,\n    },\n  },\n};\n","import EventEmmiter from \"events\";\nimport { RELAYER_EVENTS, EXPIRER_EVENTS, RELAYER_DEFAULT_PROTOCOL } from \"@walletconnect/core\";\nimport {\n  formatJsonRpcRequest,\n  formatJsonRpcResult,\n  formatJsonRpcError,\n  isJsonRpcRequest,\n  isJsonRpcResponse,\n  isJsonRpcResult,\n  isJsonRpcError,\n} from \"@walletconnect/jsonrpc-utils\";\nimport { FIVE_MINUTES } from \"@walletconnect/time\";\nimport {\n  IEngine,\n  EngineTypes,\n  IEngineEvents,\n  RelayerTypes,\n  EnginePrivate,\n  SessionTypes,\n  JsonRpcTypes,\n  ExpirerTypes,\n} from \"@walletconnect/types\";\nimport {\n  calcExpiry,\n  parseExpirerTarget,\n  createDelayedPromise,\n  getInternalError,\n  getSdkError,\n  engineEvent,\n  isValidNamespaces,\n  isValidRelays,\n  isValidRelay,\n  isValidId,\n  isValidParams,\n  isValidString,\n  isValidErrorReason,\n  isValidNamespacesChainId,\n  isValidNamespacesRequest,\n  isValidNamespacesEvent,\n  isValidRequest,\n  isValidEvent,\n  isValidResponse,\n  isValidRequiredNamespaces,\n  isSessionCompatible,\n  isExpired,\n  isUndefined,\n  isConformingNamespaces,\n  isValidController,\n  TYPE_1,\n} from \"@walletconnect/utils\";\n\nimport { SESSION_EXPIRY, ENGINE_CONTEXT, ENGINE_RPC_OPTS } from \"../constants\";\n\nexport class Engine extends IEngine {\n  public name = ENGINE_CONTEXT;\n\n  private events: IEngineEvents = new EventEmmiter();\n  private initialized = false;\n  private ignoredPayloadTypes = [TYPE_1];\n\n  constructor(client: IEngine[\"client\"]) {\n    super(client);\n  }\n\n  public init: IEngine[\"init\"] = async () => {\n    if (!this.initialized) {\n      await this.cleanup();\n      this.registerRelayerEvents();\n      this.registerExpirerEvents();\n      this.client.core.pairing.register({ methods: Object.keys(ENGINE_RPC_OPTS) });\n      this.initialized = true;\n    }\n  };\n\n  // ---------- Public ------------------------------------------------ //\n\n  public connect: IEngine[\"connect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidConnect(params);\n    const { pairingTopic, requiredNamespaces, relays } = params;\n    let topic = pairingTopic;\n    let uri: string | undefined;\n    let active = false;\n\n    if (topic) {\n      const pairing = this.client.core.pairing.pairings.get(topic);\n      active = pairing.active;\n    }\n\n    if (!topic || !active) {\n      const { topic: newTopic, uri: newUri } = await this.client.core.pairing.create();\n      topic = newTopic;\n      uri = newUri;\n    }\n\n    const publicKey = await this.client.core.crypto.generateKeyPair();\n    const proposal = {\n      requiredNamespaces,\n      relays: relays ?? [{ protocol: RELAYER_DEFAULT_PROTOCOL }],\n      proposer: {\n        publicKey,\n        metadata: this.client.metadata,\n      },\n    };\n\n    const { reject, resolve, done: approval } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once<\"session_connect\">(\n      engineEvent(\"session_connect\"),\n      async ({ error, session }) => {\n        if (error) reject(error);\n        else if (session) {\n          session.self.publicKey = publicKey;\n          const completeSession = { ...session, requiredNamespaces };\n          await this.client.session.set(session.topic, completeSession);\n          await this.setExpiry(session.topic, session.expiry);\n          if (topic) {\n            await this.client.core.pairing.updateMetadata({\n              topic,\n              metadata: session.peer.metadata,\n            });\n          }\n\n          resolve(completeSession);\n        }\n      },\n    );\n\n    if (!topic) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `connect() pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n\n    const id = await this.sendRequest(topic, \"wc_sessionPropose\", proposal);\n    const expiry = calcExpiry(FIVE_MINUTES);\n    await this.setProposal(id, { id, expiry, ...proposal });\n\n    return { uri, approval };\n  };\n\n  public pair: IEngine[\"pair\"] = async (params) => {\n    this.isInitialized();\n    return await this.client.core.pairing.pair(params);\n  };\n\n  public approve: IEngine[\"approve\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidApprove(params);\n    const { id, relayProtocol, namespaces } = params;\n    const { pairingTopic, proposer, requiredNamespaces } = this.client.proposal.get(id);\n\n    const selfPublicKey = await this.client.core.crypto.generateKeyPair();\n    const peerPublicKey = proposer.publicKey;\n    const sessionTopic = await this.client.core.crypto.generateSharedKey(\n      selfPublicKey,\n      peerPublicKey,\n    );\n    const sessionSettle = {\n      relay: { protocol: relayProtocol ?? \"irn\" },\n      namespaces,\n      requiredNamespaces,\n      controller: { publicKey: selfPublicKey, metadata: this.client.metadata },\n      expiry: calcExpiry(SESSION_EXPIRY),\n    };\n\n    await this.client.core.relayer.subscribe(sessionTopic);\n    const requestId = await this.sendRequest(sessionTopic, \"wc_sessionSettle\", sessionSettle);\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<SessionTypes.Struct>();\n    this.events.once(engineEvent(\"session_approve\", requestId), ({ error }) => {\n      if (error) reject(error);\n      else resolve(this.client.session.get(sessionTopic));\n    });\n\n    const session = {\n      ...sessionSettle,\n      topic: sessionTopic,\n      acknowledged: false,\n      self: sessionSettle.controller,\n      peer: {\n        publicKey: proposer.publicKey,\n        metadata: proposer.metadata,\n      },\n      controller: selfPublicKey,\n    };\n    await this.client.session.set(sessionTopic, session);\n    await this.setExpiry(sessionTopic, calcExpiry(SESSION_EXPIRY));\n    if (pairingTopic) {\n      await this.client.core.pairing.updateMetadata({\n        topic: pairingTopic,\n        metadata: session.peer.metadata,\n      });\n    }\n    if (pairingTopic && id) {\n      await this.sendResult<\"wc_sessionPropose\">(id, pairingTopic, {\n        relay: {\n          protocol: relayProtocol ?? \"irn\",\n        },\n        responderPublicKey: selfPublicKey,\n      });\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      await this.client.core.pairing.activate({ topic: pairingTopic });\n    }\n\n    return { topic: sessionTopic, acknowledged };\n  };\n\n  public reject: IEngine[\"reject\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidReject(params);\n    const { id, reason } = params;\n    const { pairingTopic } = this.client.proposal.get(id);\n    if (pairingTopic) {\n      await this.sendError(id, pairingTopic, reason);\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n    }\n  };\n\n  public update: IEngine[\"update\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidUpdate(params);\n    const { topic, namespaces } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionUpdate\", { namespaces });\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_update\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.client.session.update(topic, { namespaces });\n\n    return { acknowledged };\n  };\n\n  public extend: IEngine[\"extend\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidExtend(params);\n    const { topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionExtend\", {});\n    const { done: acknowledged, resolve, reject } = createDelayedPromise<void>();\n    this.events.once(engineEvent(\"session_extend\", id), ({ error }) => {\n      if (error) reject(error);\n      else resolve();\n    });\n    await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n\n    return { acknowledged };\n  };\n\n  public request: IEngine[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    this.isInitialized();\n    await this.isValidRequest(params);\n    const { chainId, request, topic } = params;\n    const id = await this.sendRequest(topic, \"wc_sessionRequest\", { request, chainId });\n    const { done, resolve, reject } = createDelayedPromise<T>();\n    this.events.once<\"session_request\">(engineEvent(\"session_request\", id), ({ error, result }) => {\n      if (error) reject(error);\n      else resolve(result);\n    });\n    return await done();\n  };\n\n  public respond: IEngine[\"respond\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidRespond(params);\n    const { topic, response } = params;\n    const { id } = response;\n    if (isJsonRpcResult(response)) {\n      await this.sendResult(id, topic, response.result);\n    } else if (isJsonRpcError(response)) {\n      await this.sendError(id, topic, response.error);\n    }\n  };\n\n  public ping: IEngine[\"ping\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidPing(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      const id = await this.sendRequest(topic, \"wc_sessionPing\", {});\n      const { done, resolve, reject } = createDelayedPromise<void>();\n      this.events.once(engineEvent(\"session_ping\", id), ({ error }) => {\n        if (error) reject(error);\n        else resolve();\n      });\n      await done();\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      await this.client.core.pairing.ping({ topic });\n    }\n  };\n\n  public emit: IEngine[\"emit\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidEmit(params);\n    const { topic, event, chainId } = params;\n    await this.sendRequest(topic, \"wc_sessionEvent\", { event, chainId });\n  };\n\n  public disconnect: IEngine[\"disconnect\"] = async (params) => {\n    this.isInitialized();\n    await this.isValidDisconnect(params);\n    const { topic } = params;\n    if (this.client.session.keys.includes(topic)) {\n      await this.sendRequest(topic, \"wc_sessionDelete\", getSdkError(\"USER_DISCONNECTED\"));\n      await this.deleteSession(topic);\n    } else {\n      await this.client.core.pairing.disconnect({ topic });\n    }\n  };\n\n  public find: IEngine[\"find\"] = (params) => {\n    this.isInitialized();\n    return this.client.session.getAll().filter((session) => isSessionCompatible(session, params));\n  };\n\n  // ---------- Private Helpers --------------------------------------- //\n\n  private deleteSession: EnginePrivate[\"deleteSession\"] = async (topic, expirerHasDeleted) => {\n    const { self } = this.client.session.get(topic);\n    // Await the unsubscribe first to avoid deleting the symKey too early below.\n    await this.client.core.relayer.unsubscribe(topic);\n    await Promise.all([\n      this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\")),\n      this.client.core.crypto.deleteKeyPair(self.publicKey),\n      this.client.core.crypto.deleteSymKey(topic),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(topic),\n    ]);\n  };\n\n  private deleteProposal: EnginePrivate[\"deleteProposal\"] = async (id, expirerHasDeleted) => {\n    await Promise.all([\n      this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\")),\n      expirerHasDeleted ? Promise.resolve() : this.client.core.expirer.del(id),\n    ]);\n  };\n\n  private setExpiry: EnginePrivate[\"setExpiry\"] = async (topic, expiry) => {\n    if (this.client.session.keys.includes(topic)) {\n      await this.client.session.update(topic, { expiry });\n    }\n    this.client.core.expirer.set(topic, expiry);\n  };\n\n  private setProposal: EnginePrivate[\"setProposal\"] = async (id, proposal) => {\n    await this.client.proposal.set(id, proposal);\n    this.client.core.expirer.set(id, proposal.expiry);\n  };\n\n  private sendRequest: EnginePrivate[\"sendRequest\"] = async (topic, method, params) => {\n    const payload = formatJsonRpcRequest(method, params);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const opts = ENGINE_RPC_OPTS[method].req;\n    this.client.core.history.set(topic, payload);\n\n    // await is intentionally omitted here because of a possible race condition\n    // where a response is received before the publish call is resolved\n    this.client.core.relayer.publish(topic, message, opts);\n    return payload.id;\n  };\n\n  private sendResult: EnginePrivate[\"sendResult\"] = async (id, topic, result) => {\n    const payload = formatJsonRpcResult(id, result);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private sendError: EnginePrivate[\"sendError\"] = async (id, topic, error) => {\n    const payload = formatJsonRpcError(id, error);\n    const message = await this.client.core.crypto.encode(topic, payload);\n    const record = await this.client.core.history.get(topic, id);\n    const opts = ENGINE_RPC_OPTS[record.request.method].res;\n    // await is intentionally omitted to speed up performance\n    this.client.core.relayer.publish(topic, message, opts);\n    await this.client.core.history.resolve(payload);\n  };\n\n  private cleanup: EnginePrivate[\"cleanup\"] = async () => {\n    const sessionTopics: string[] = [];\n    const proposalIds: number[] = [];\n    this.client.session.getAll().forEach((session) => {\n      if (isExpired(session.expiry)) sessionTopics.push(session.topic);\n    });\n    this.client.proposal.getAll().forEach((proposal) => {\n      if (isExpired(proposal.expiry)) proposalIds.push(proposal.id);\n    });\n    await Promise.all([\n      ...sessionTopics.map((topic) => this.deleteSession(topic)),\n      ...proposalIds.map((id) => this.deleteProposal(id)),\n    ]);\n  };\n\n  private isInitialized() {\n    if (!this.initialized) {\n      const { message } = getInternalError(\"NOT_INITIALIZED\", this.name);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Relay Events Router ----------------------------------- //\n\n  private registerRelayerEvents() {\n    this.client.core.relayer.on(\n      RELAYER_EVENTS.message,\n      async (event: RelayerTypes.MessageEvent) => {\n        const { topic, message } = event;\n\n        // messages of certain types should be ignored as they are handled by their respective SDKs\n        if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(message))) {\n          return;\n        }\n\n        const payload = await this.client.core.crypto.decode(topic, message);\n        if (isJsonRpcRequest(payload)) {\n          this.client.core.history.set(topic, payload);\n          this.onRelayEventRequest({ topic, payload });\n        } else if (isJsonRpcResponse(payload)) {\n          await this.client.core.history.resolve(payload);\n          this.onRelayEventResponse({ topic, payload });\n        }\n      },\n    );\n  }\n\n  private onRelayEventRequest: EnginePrivate[\"onRelayEventRequest\"] = (event) => {\n    const { topic, payload } = event;\n    const reqMethod = payload.method as JsonRpcTypes.WcMethod;\n\n    switch (reqMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeRequest(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleRequest(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateRequest(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendRequest(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingRequest(topic, payload);\n      case \"wc_sessionDelete\":\n        return this.onSessionDeleteRequest(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequest(topic, payload);\n      case \"wc_sessionEvent\":\n        return this.onSessionEventRequest(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported request method ${reqMethod}`);\n    }\n  };\n\n  private onRelayEventResponse: EnginePrivate[\"onRelayEventResponse\"] = async (event) => {\n    const { topic, payload } = event;\n    const record = await this.client.core.history.get(topic, payload.id);\n    const resMethod = record.request.method as JsonRpcTypes.WcMethod;\n\n    switch (resMethod) {\n      case \"wc_sessionPropose\":\n        return this.onSessionProposeResponse(topic, payload);\n      case \"wc_sessionSettle\":\n        return this.onSessionSettleResponse(topic, payload);\n      case \"wc_sessionUpdate\":\n        return this.onSessionUpdateResponse(topic, payload);\n      case \"wc_sessionExtend\":\n        return this.onSessionExtendResponse(topic, payload);\n      case \"wc_sessionPing\":\n        return this.onSessionPingResponse(topic, payload);\n      case \"wc_sessionRequest\":\n        return this.onSessionRequestResponse(topic, payload);\n      default:\n        return this.client.logger.info(`Unsupported response method ${resMethod}`);\n    }\n  };\n\n  // ---------- Relay Events Handlers --------------------------------- //\n\n  private onSessionProposeRequest: EnginePrivate[\"onSessionProposeRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidConnect({ ...payload.params });\n      const expiry = calcExpiry(FIVE_MINUTES);\n      const proposal = { id, pairingTopic: topic, expiry, ...params };\n      await this.setProposal(id, proposal);\n      this.client.events.emit(\"session_proposal\", { id, params: proposal });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionProposeResponse: EnginePrivate[\"onSessionProposeResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      const { result } = payload;\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", result });\n      const proposal = this.client.proposal.get(id);\n      this.client.logger.trace({ type: \"method\", method: \"onSessionProposeResponse\", proposal });\n      const selfPublicKey = proposal.proposer.publicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        selfPublicKey,\n      });\n      const peerPublicKey = result.responderPublicKey;\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        peerPublicKey,\n      });\n      const sessionTopic = await this.client.core.crypto.generateSharedKey(\n        selfPublicKey,\n        peerPublicKey,\n      );\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        sessionTopic,\n      });\n      const subscriptionId = await this.client.core.relayer.subscribe(sessionTopic);\n      this.client.logger.trace({\n        type: \"method\",\n        method: \"onSessionProposeResponse\",\n        subscriptionId,\n      });\n      await this.client.core.pairing.activate({ topic });\n    } else if (isJsonRpcError(payload)) {\n      await this.client.proposal.delete(id, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_connect\"), { error: payload.error });\n    }\n  };\n\n  private onSessionSettleRequest: EnginePrivate[\"onSessionSettleRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidSessionSettleRequest(params);\n      const { relay, controller, expiry, namespaces } = payload.params;\n      const session = {\n        topic,\n        relay,\n        expiry,\n        namespaces,\n        acknowledged: true,\n        controller: controller.publicKey,\n        self: {\n          publicKey: \"\",\n          metadata: this.client.metadata,\n        },\n        peer: {\n          publicKey: controller.publicKey,\n          metadata: controller.metadata,\n        },\n      };\n      await this.sendResult<\"wc_sessionSettle\">(payload.id, topic, true);\n      this.events.emit(engineEvent(\"session_connect\"), { session });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionSettleResponse: EnginePrivate[\"onSessionSettleResponse\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      await this.client.session.update(topic, { acknowledged: true });\n      this.events.emit(engineEvent(\"session_approve\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      await this.client.session.delete(topic, getSdkError(\"USER_DISCONNECTED\"));\n      this.events.emit(engineEvent(\"session_approve\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionUpdateRequest: EnginePrivate[\"onSessionUpdateRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { params, id } = payload;\n    try {\n      this.isValidUpdate({ topic, ...params });\n      await this.client.session.update(topic, { namespaces: params.namespaces });\n      await this.sendResult<\"wc_sessionUpdate\">(id, topic, true);\n      this.client.events.emit(\"session_update\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionUpdateResponse: EnginePrivate[\"onSessionUpdateResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_update\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionExtendRequest: EnginePrivate[\"onSessionExtendRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidExtend({ topic });\n      await this.setExpiry(topic, calcExpiry(SESSION_EXPIRY));\n      await this.sendResult<\"wc_sessionExtend\">(id, topic, true);\n      this.client.events.emit(\"session_extend\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionExtendResponse: EnginePrivate[\"onSessionExtendResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), {});\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_extend\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionPingRequest: EnginePrivate[\"onSessionPingRequest\"] = async (topic, payload) => {\n    const { id } = payload;\n    try {\n      this.isValidPing({ topic });\n      await this.sendResult<\"wc_sessionPing\">(id, topic, true);\n      this.client.events.emit(\"session_ping\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionPingResponse: EnginePrivate[\"onSessionPingResponse\"] = (_topic, payload) => {\n    const { id } = payload;\n    // put at the end of the stack to avoid a race condition\n    // where session_ping listener is not yet initialized\n    setTimeout(() => {\n      if (isJsonRpcResult(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), {});\n      } else if (isJsonRpcError(payload)) {\n        this.events.emit(engineEvent(\"session_ping\", id), { error: payload.error });\n      }\n    }, 500);\n  };\n\n  private onSessionDeleteRequest: EnginePrivate[\"onSessionDeleteRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    try {\n      this.isValidDisconnect({ topic, reason: payload.params });\n      // RPC request needs to happen before deletion as it utalises session encryption\n      await this.sendResult<\"wc_sessionDelete\">(id, topic, true);\n      await this.deleteSession(topic);\n      this.client.events.emit(\"session_delete\", { id, topic });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequest: EnginePrivate[\"onSessionRequest\"] = async (topic, payload) => {\n    const { id, params } = payload;\n    try {\n      this.isValidRequest({ topic, ...params });\n      this.client.events.emit(\"session_request\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  private onSessionRequestResponse: EnginePrivate[\"onSessionRequestResponse\"] = (\n    _topic,\n    payload,\n  ) => {\n    const { id } = payload;\n    if (isJsonRpcResult(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { result: payload.result });\n    } else if (isJsonRpcError(payload)) {\n      this.events.emit(engineEvent(\"session_request\", id), { error: payload.error });\n    }\n  };\n\n  private onSessionEventRequest: EnginePrivate[\"onSessionEventRequest\"] = async (\n    topic,\n    payload,\n  ) => {\n    const { id, params } = payload;\n    try {\n      this.isValidEmit({ topic, ...params });\n      this.client.events.emit(\"session_event\", { id, topic, params });\n    } catch (err: any) {\n      await this.sendError(id, topic, err);\n      this.client.logger.error(err);\n    }\n  };\n\n  // ---------- Expirer Events ---------------------------------------- //\n\n  private registerExpirerEvents() {\n    this.client.core.expirer.on(EXPIRER_EVENTS.expired, async (event: ExpirerTypes.Expiration) => {\n      const { topic, id } = parseExpirerTarget(event.target);\n      if (topic) {\n        if (this.client.session.keys.includes(topic)) {\n          await this.deleteSession(topic, true);\n          this.client.events.emit(\"session_expire\", { topic });\n        }\n      } else if (id) {\n        await this.deleteProposal(id, true);\n      }\n    });\n  }\n\n  // ---------- Validation Helpers ------------------------------------ //\n  private isValidPairingTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.core.pairing.pairings.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.core.pairing.pairings.get(topic).expiry)) {\n      // await this.deletePairing(topic);\n      const { message } = getInternalError(\"EXPIRED\", `pairing topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionTopic(topic: any) {\n    if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.session.keys.includes(topic)) {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n    if (isExpired(this.client.session.get(topic).expiry)) {\n      await this.deleteSession(topic);\n      const { message } = getInternalError(\"EXPIRED\", `session topic: ${topic}`);\n      throw new Error(message);\n    }\n  }\n\n  private async isValidSessionOrPairingTopic(topic: string) {\n    if (this.client.session.keys.includes(topic)) {\n      await this.isValidSessionTopic(topic);\n    } else if (this.client.core.pairing.pairings.keys.includes(topic)) {\n      this.isValidPairingTopic(topic);\n    } else if (!isValidString(topic, false)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `session or pairing topic should be a string: ${topic}`,\n      );\n      throw new Error(message);\n    } else {\n      const { message } = getInternalError(\n        \"NO_MATCHING_KEY\",\n        `session or pairing topic doesn't exist: ${topic}`,\n      );\n      throw new Error(message);\n    }\n  }\n\n  private async isValidProposalId(id: any) {\n    if (!isValidId(id)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `proposal id should be a number: ${id}`,\n      );\n      throw new Error(message);\n    }\n    if (!this.client.proposal.keys.includes(id)) {\n      const { message } = getInternalError(\"NO_MATCHING_KEY\", `proposal id doesn't exist: ${id}`);\n      throw new Error(message);\n    }\n    if (isExpired(this.client.proposal.get(id).expiry)) {\n      await this.deleteProposal(id);\n      const { message } = getInternalError(\"EXPIRED\", `proposal id: ${id}`);\n      throw new Error(message);\n    }\n  }\n\n  // ---------- Validation  ------------------------------------------- //\n\n  private isValidConnect: EnginePrivate[\"isValidConnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `connect() params: ${JSON.stringify(params)}`,\n      );\n      throw new Error(message);\n    }\n    const { pairingTopic, requiredNamespaces, relays } = params;\n    if (!isUndefined(pairingTopic)) await this.isValidPairingTopic(pairingTopic);\n    const validRequiredNamespacesError = isValidRequiredNamespaces(requiredNamespaces, \"connect()\");\n    if (validRequiredNamespacesError) throw new Error(validRequiredNamespacesError.message);\n    if (!isValidRelays(relays, true)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `connect() relays: ${relays}`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidApprove: EnginePrivate[\"isValidApprove\"] = async (params) => {\n    if (!isValidParams(params))\n      throw new Error(\n        getInternalError(\"MISSING_OR_INVALID\", `approve() params: ${params}`).message,\n      );\n    const { id, namespaces, relayProtocol } = params;\n    await this.isValidProposalId(id);\n    const proposal = this.client.proposal.get(id);\n    const validNamespacesError = isValidNamespaces(namespaces, \"approve()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      proposal.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    if (!isValidString(relayProtocol, true)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `approve() relayProtocol: ${relayProtocol}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidReject: EnginePrivate[\"isValidReject\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `reject() params: ${params}`);\n      throw new Error(message);\n    }\n    const { id, reason } = params;\n    await this.isValidProposalId(id);\n    if (!isValidErrorReason(reason)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `reject() reason: ${JSON.stringify(reason)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidSessionSettleRequest: EnginePrivate[\"isValidSessionSettleRequest\"] = (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() params: ${params}`,\n      );\n      throw new Error(message);\n    }\n    const { relay, controller, namespaces, expiry } = params;\n    if (!isValidRelay(relay)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `onSessionSettleRequest() relay protocol should be a string`,\n      );\n      throw new Error(message);\n    }\n    const validControllerError = isValidController(controller, \"onSessionSettleRequest()\");\n    if (validControllerError) throw new Error(validControllerError.message);\n    const validNamespacesError = isValidNamespaces(namespaces, \"onSessionSettleRequest()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    if (isExpired(expiry)) {\n      const { message } = getInternalError(\"EXPIRED\", `onSessionSettleRequest()`);\n      throw new Error(message);\n    }\n  };\n\n  private isValidUpdate: EnginePrivate[\"isValidUpdate\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `update() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, namespaces } = params;\n    await this.isValidSessionTopic(topic);\n    const session = this.client.session.get(topic);\n    const validNamespacesError = isValidNamespaces(namespaces, \"update()\");\n    if (validNamespacesError) throw new Error(validNamespacesError.message);\n    const conformingNamespacesError = isConformingNamespaces(\n      session.requiredNamespaces,\n      namespaces,\n      \"update()\",\n    );\n    if (conformingNamespacesError) throw new Error(conformingNamespacesError.message);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidExtend: EnginePrivate[\"isValidExtend\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `extend() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionTopic(topic);\n    // TODO(ilja) - check if wallet\n  };\n\n  private isValidRequest: EnginePrivate[\"isValidRequest\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, request, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `request() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidRequest(request)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() ${JSON.stringify(request)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesRequest(namespaces, chainId, request.method)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `request() method: ${request.method}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidRespond: EnginePrivate[\"isValidRespond\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `respond() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, response } = params;\n    await this.isValidSessionTopic(topic);\n    if (!isValidResponse(response)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `respond() response: ${JSON.stringify(response)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidPing: EnginePrivate[\"isValidPing\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `ping() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n\n  private isValidEmit: EnginePrivate[\"isValidEmit\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic, event, chainId } = params;\n    await this.isValidSessionTopic(topic);\n    const { namespaces } = this.client.session.get(topic);\n    if (!isValidNamespacesChainId(namespaces, chainId)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `emit() chainId: ${chainId}`);\n      throw new Error(message);\n    }\n    if (!isValidEvent(event)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n    if (!isValidNamespacesEvent(namespaces, chainId, event.name)) {\n      const { message } = getInternalError(\n        \"MISSING_OR_INVALID\",\n        `emit() event: ${JSON.stringify(event)}`,\n      );\n      throw new Error(message);\n    }\n  };\n\n  private isValidDisconnect: EnginePrivate[\"isValidDisconnect\"] = async (params) => {\n    if (!isValidParams(params)) {\n      const { message } = getInternalError(\"MISSING_OR_INVALID\", `disconnect() params: ${params}`);\n      throw new Error(message);\n    }\n    const { topic } = params;\n    await this.isValidSessionOrPairingTopic(topic);\n  };\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, ProposalTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, PROPOSAL_CONTEXT } from \"../constants\";\n\nexport class Proposal extends Store<number, ProposalTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, PROPOSAL_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import { Store } from \"@walletconnect/core\";\nimport { Logger } from \"@walletconnect/logger\";\nimport { ICore, SessionTypes } from \"@walletconnect/types\";\n\nimport { SIGN_CLIENT_STORAGE_PREFIX, SESSION_CONTEXT } from \"../constants\";\n\nexport class Session extends Store<string, SessionTypes.Struct> {\n  constructor(public core: ICore, public logger: Logger) {\n    super(core, logger, SESSION_CONTEXT, SIGN_CLIENT_STORAGE_PREFIX);\n  }\n}\n","import pino from \"pino\";\nimport { Core } from \"@walletconnect/core\";\nimport {\n  generateChildLogger,\n  getDefaultLoggerOptions,\n  getLoggerContext,\n} from \"@walletconnect/logger\";\nimport { SignClientTypes, ISignClient, ISignClientEvents, EngineTypes } from \"@walletconnect/types\";\nimport { getAppMetadata } from \"@walletconnect/utils\";\nimport { EventEmitter } from \"events\";\nimport { SIGN_CLIENT_DEFAULT, SIGN_CLIENT_PROTOCOL, SIGN_CLIENT_VERSION } from \"./constants\";\nimport { Engine, Proposal, Session } from \"./controllers\";\n\nexport class SignClient extends ISignClient {\n  public readonly protocol = SIGN_CLIENT_PROTOCOL;\n  public readonly version = SIGN_CLIENT_VERSION;\n  public readonly name: ISignClient[\"name\"] = SIGN_CLIENT_DEFAULT.name;\n  public readonly metadata: ISignClient[\"metadata\"];\n\n  public core: ISignClient[\"core\"];\n  public logger: ISignClient[\"logger\"];\n  public events: ISignClient[\"events\"] = new EventEmitter();\n  public engine: ISignClient[\"engine\"];\n  public session: ISignClient[\"session\"];\n  public proposal: ISignClient[\"proposal\"];\n\n  static async init(opts?: SignClientTypes.Options) {\n    const client = new SignClient(opts);\n    await client.initialize();\n\n    return client;\n  }\n\n  constructor(opts?: SignClientTypes.Options) {\n    super(opts);\n\n    this.name = opts?.name || SIGN_CLIENT_DEFAULT.name;\n    this.metadata = opts?.metadata || getAppMetadata();\n\n    const logger =\n      typeof opts?.logger !== \"undefined\" && typeof opts?.logger !== \"string\"\n        ? opts.logger\n        : pino(getDefaultLoggerOptions({ level: opts?.logger || SIGN_CLIENT_DEFAULT.logger }));\n\n    this.core = opts?.core || new Core(opts);\n    this.logger = generateChildLogger(logger, this.name);\n    this.session = new Session(this.core, this.logger);\n    this.proposal = new Proposal(this.core, this.logger);\n    this.engine = new Engine(this);\n  }\n\n  get context() {\n    return getLoggerContext(this.logger);\n  }\n\n  get pairing() {\n    return this.core.pairing.pairings;\n  }\n\n  // ---------- Events ----------------------------------------------- //\n\n  public on: ISignClientEvents[\"on\"] = (name, listener) => {\n    return this.events.on(name, listener);\n  };\n\n  public once: ISignClientEvents[\"once\"] = (name, listener) => {\n    return this.events.once(name, listener);\n  };\n\n  public off: ISignClientEvents[\"off\"] = (name, listener) => {\n    return this.events.off(name, listener);\n  };\n\n  public removeListener: ISignClientEvents[\"removeListener\"] = (name, listener) => {\n    return this.events.removeListener(name, listener);\n  };\n\n  // ---------- Engine ----------------------------------------------- //\n\n  public connect: ISignClient[\"connect\"] = async (params) => {\n    try {\n      return await this.engine.connect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public pair: ISignClient[\"pair\"] = async (params) => {\n    try {\n      return await this.engine.pair(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public approve: ISignClient[\"approve\"] = async (params) => {\n    try {\n      return await this.engine.approve(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public reject: ISignClient[\"reject\"] = async (params) => {\n    try {\n      return await this.engine.reject(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public update: ISignClient[\"update\"] = async (params) => {\n    try {\n      return await this.engine.update(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public extend: ISignClient[\"extend\"] = async (params) => {\n    try {\n      return await this.engine.extend(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public request: ISignClient[\"request\"] = async <T>(params: EngineTypes.RequestParams) => {\n    try {\n      return await this.engine.request<T>(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public respond: ISignClient[\"respond\"] = async (params) => {\n    try {\n      return await this.engine.respond(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public ping: ISignClient[\"ping\"] = async (params) => {\n    try {\n      return await this.engine.ping(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public emit: ISignClient[\"emit\"] = async (params) => {\n    try {\n      return await this.engine.emit(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public disconnect: ISignClient[\"disconnect\"] = async (params) => {\n    try {\n      return await this.engine.disconnect(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  public find: ISignClient[\"find\"] = (params) => {\n    try {\n      return this.engine.find(params);\n    } catch (error: any) {\n      this.logger.error(error.message);\n      throw error;\n    }\n  };\n\n  // ---------- Private ----------------------------------------------- //\n\n  private async initialize() {\n    this.logger.trace(`Initialized`);\n    try {\n      await this.core.start();\n      await this.session.init();\n      await this.proposal.init();\n      await this.engine.init();\n      this.logger.info(`SignClient Initilization Success`);\n    } catch (error: any) {\n      this.logger.info(`SignClient Initilization Failure`);\n      this.logger.error(error.message);\n      throw error;\n    }\n  }\n}\n","import { SignClient as Client } from \"./client\";\n\nexport * from \"./constants\";\n\nexport const SignClient = Client;\nexport default Client;\n"],"names":["THIRTY_DAYS","SEVEN_DAYS","FIVE_MINUTES","ONE_DAY","THIRTY_SECONDS","IEngine","client","ENGINE_CONTEXT","EventEmmiter","TYPE_1","ENGINE_RPC_OPTS","params","pairingTopic","requiredNamespaces","relays","topic","uri","active","newTopic","newUri","publicKey","proposal","RELAYER_DEFAULT_PROTOCOL","reject","resolve","approval","createDelayedPromise","engineEvent","error","session","completeSession","__spreadProps","__spreadValues","message","getInternalError","id","expiry","calcExpiry","relayProtocol","namespaces","proposer","selfPublicKey","peerPublicKey","sessionTopic","sessionSettle","SESSION_EXPIRY","requestId","acknowledged","getSdkError","reason","chainId","request","done","result","response","isJsonRpcResult","isJsonRpcError","event","isSessionCompatible","expirerHasDeleted","self","method","payload","formatJsonRpcRequest","opts","formatJsonRpcResult","record","formatJsonRpcError","sessionTopics","proposalIds","isExpired","reqMethod","resMethod","err","subscriptionId","relay","controller","_topic","isValidParams","isUndefined","validRequiredNamespacesError","isValidRequiredNamespaces","isValidRelays","validNamespacesError","isValidNamespaces","conformingNamespacesError","isConformingNamespaces","isValidString","isValidErrorReason","isValidRelay","validControllerError","isValidController","isValidNamespacesChainId","isValidRequest","isValidNamespacesRequest","isValidResponse","isValidEvent","isValidNamespacesEvent","RELAYER_EVENTS","isJsonRpcRequest","isJsonRpcResponse","EXPIRER_EVENTS","parseExpirerTarget","isValidId","Store","core","logger","PROPOSAL_CONTEXT","SIGN_CLIENT_STORAGE_PREFIX","SESSION_CONTEXT","SignClient","ISignClient","SIGN_CLIENT_PROTOCOL","SIGN_CLIENT_VERSION","SIGN_CLIENT_DEFAULT","EventEmitter","name","listener","getAppMetadata","pino","getDefaultLoggerOptions","Core","generateChildLogger","Session","Proposal","Engine","getLoggerContext","Client"],"mappings":"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"}
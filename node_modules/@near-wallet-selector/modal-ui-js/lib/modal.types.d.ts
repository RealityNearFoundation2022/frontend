import type { Wallet } from "@near-wallet-selector/core";
import type { ModuleState } from "@near-wallet-selector/core";
import type { Subscription } from "@near-wallet-selector/core";
export declare type Theme = "dark" | "light" | "auto";
export interface ModalOptions {
    contractId: string;
    methodNames?: Array<string>;
    theme?: Theme;
    description?: string;
    onHide?: (hideReason: "user-triggered" | "wallet-navigation") => void;
}
export declare type ModalHideReason = "user-triggered" | "wallet-navigation";
export declare type ModalEvents = {
    onHide: {
        hideReason: ModalHideReason;
    };
};
export interface WalletSelectorModal {
    show(): void;
    hide(): void;
    on<EventName extends keyof ModalEvents>(eventName: EventName, callback: (event: ModalEvents[EventName]) => void): Subscription;
    off<EventName extends keyof ModalEvents>(eventName: EventName, callback: (event: ModalEvents[EventName]) => void): void;
}
declare type AlertMessageModalRouteParams = {
    wallet: Wallet;
};
declare type WalletOptionsModalRouteParams = {
    wallet: Wallet;
};
declare type DerivationPathModalRouteParams = {
    walletId: string;
};
declare type WalletNotInstalledModalRouteParams = {
    module: ModuleState;
};
declare type WalletNetworkChangedModalRouteParams = {
    wallet: Wallet;
};
declare type WalletConnectingModalRouteParams = {
    wallet: Wallet;
};
declare type AlertMessageModalRoute = {
    name: "AlertMessage";
    params?: AlertMessageModalRouteParams;
};
declare type WalletOptionsModalRoute = {
    name: "WalletOptions";
    params?: WalletOptionsModalRouteParams;
};
declare type DerivationPathModalRoute = {
    name: "DerivationPath";
    params: DerivationPathModalRouteParams;
};
declare type WalletNotInstalledModalRoute = {
    name: "WalletNotInstalled";
    params?: WalletNotInstalledModalRouteParams;
};
declare type WalletNetworkChangedModalRoute = {
    name: "WalletNetworkChanged";
    params?: WalletNetworkChangedModalRouteParams;
};
declare type WalletConnectingModalRoute = {
    name: "WalletConnecting";
    params?: WalletConnectingModalRouteParams;
};
export declare type ModalRoute = AlertMessageModalRoute | WalletOptionsModalRoute | DerivationPathModalRoute | WalletNotInstalledModalRoute | WalletNetworkChangedModalRoute | WalletConnectingModalRoute;
export {};
